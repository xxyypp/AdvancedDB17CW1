Normally database store data in the row, different kinds of data are stored together in
the memory page. In this case, the size of the Yelp database is significantly large. When
querying, a lot of records in the database were accessed. Compared to the difference with/
without Columnstore Indexing, there was a significant improvementof the performance when
using the Columnstore Indexing. From the result, the average cost without indexing was
1661945.6, whereas the average cost using Columnsotre Indexing was 564298.8. Columnstore
indexing was around 3 times faster than the case without columnstore indexing. By using
columnstore indexing, the rows are converted to row groups first, then they will be
encoded and compressed into column segment and stored in the memory. A directory will
update the location of each segment, so when querying, the specific segment can be
found and located quickly and easily. Hence, it can reduce the I/O times.

By storing the data in columns, which means the same kind of data is stored together in
a page in memory.Different columns are stored in different pages. When querying, the
number of access of data fromthe memory space can be reduced; which means the number of
I/O scans in the memory locations were reduced, thus it can improve the efficiency. In
this case, if we use columnstore indexing, we only access the memory location we needed
such as id,business_id, customer_id in review, but not other data like text, useful, funny etc. .
